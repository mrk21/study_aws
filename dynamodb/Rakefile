require '../util'

desc 'Creates an application'
task :create do
  db = dynamodb_client
  
  pp table = db.create_table(
    table_name: 'test_table',
    key_schema: [
      {
        attribute_name: 'id',
        key_type: 'HASH'
      }
    ],
    attribute_definitions: [
      {
        attribute_name: 'id',
        attribute_type: 'S'
      }
    ],
    provisioned_throughput: {
      read_capacity_units: 2,
      write_capacity_units: 2
    }
  )
  
  sleep 5
  
  # PutItem: Put a single item
  pp result = db.put_item(
    table_name: 'test_table',
    item: {
      id: '1',
    },
  )
  
  sleep 3
  
  # GetItem: Get a single item
  pp result = db.get_item(
    table_name: 'test_table',
    key: {
      id: '1'
    }
  )
end

desc 'Gets multiple items'
task :batch_get_item do
  db = dynamodb_client
  
  # BatchGetItem: Gets multiple items.
  # @see [Class: Aws::DynamoDB::Client â€” AWS SDK for Ruby V2]{@link http://docs.aws.amazon.com/sdkforruby/api/Aws/DynamoDB/Client.html#batch_get_item-instance_method}
  pp result = db.batch_get_item(
    request_items: {
      'test_table' => {
        keys: [
          {
            id: '1'
          },
        ],
        attributes_to_get: ['id'],
        consistent_read: true,
      },
    },
    return_consumed_capacity: 'INDEXES'
  )
end
