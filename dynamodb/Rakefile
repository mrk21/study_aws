require '../util'

desc 'Creates a table'
task :create do
  db = dynamodb_client
  
  pp table = db.create_table(
    table_name: 'test_table',
    attribute_definitions: [
      {
        attribute_name: 'id',
        attribute_type: 'S'
      },
    ],
    key_schema: [
      {
        attribute_name: 'id',
        key_type: 'HASH'
      },
    ],
    provisioned_throughput: {
      read_capacity_units: 2,
      write_capacity_units: 2
    }
  )
end

desc 'Puts an item'
task :put do
  db = dynamodb_client
  
  10.times do |i|
    # PutItem: Put a single item
    pp result = db.put_item(
      table_name: 'test_table',
      item: {
        id: i.to_s,
        value: 100*i
      }
    )
  end
end

desc 'Gets an item'
task :get do
  db = dynamodb_client
  
  # GetItem: Get a single item
  pp result = db.get_item(
    table_name: 'test_table',
    key: {
      id: '1'
    }
  )
end

desc 'Gets multiple items'
task :batch_get do
  db = dynamodb_client
  
  # BatchGetItem: Gets multiple items.
  # @see [Class: Aws::DynamoDB::Client â€” AWS SDK for Ruby V2]{@link http://docs.aws.amazon.com/sdkforruby/api/Aws/DynamoDB/Client.html#batch_get_item-instance_method}
  pp result = db.batch_get_item(
    request_items: {
      'test_table' => {
        keys: 5.times.map{|i| {id: i.to_s}},
        attributes_to_get: ['id','value'],
        consistent_read: true,
      },
    },
    return_consumed_capacity: 'INDEXES'
  )
end
